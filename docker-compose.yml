version: "3.9"

services:
  db:
    container_name: postgresql
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"

  web:
    build: .
    container_name: backend
    volumes:
      - .:/code
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py loaddata accounts/fixtures/* &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbit
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: vhost
    volumes:
      - ./rabbitmq/etc/definitions.json:/etc/rabbitmq/definitions.json
      - ./rabbitmq/etc/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/data:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
      - ./rabbitmq/logs:/var/log/rabbitmq/log
    ports:
      - 5672:5672
      - 15672:15672

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "celery -A config.celery:app worker --loglevel=info"
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - web
      - rabbitmq

  beat:
    build: .
    command: celery -A config.celery beat -l info
    env_file:
      - .env
    depends_on:
      - web
      - rabbitmq
